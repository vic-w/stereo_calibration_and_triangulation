% Auto-generated by stereoCalibrator app on 16-Oct-2020
%-------------------------------------------------------


% Define images to process
imageFileNames1 = {'..\cam1\b00.jpg',...
    '..\cam1\b01.jpg',...
    '..\cam1\b02.jpg',...
    '..\cam1\b03.jpg',...
    '..\cam1\b04.jpg',...
    '..\cam1\b05.jpg',...
    '..\cam1\b06.jpg',...
    '..\cam1\b07.jpg',...
    '..\cam1\b08.jpg',...
    '..\cam1\b09.jpg',...
    '..\cam1\b10.jpg',...
    '..\cam1\b11.jpg',...
    '..\cam1\b12.jpg',...
    '..\cam1\b13.jpg',...
    '..\cam1\b14.jpg',...
    };
imageFileNames2 = {'..\cam2\a00.jpg',...
    '..\cam2\a01.jpg',...
    '..\cam2\a02.jpg',...
    '..\cam2\a03.jpg',...
    '..\cam2\a04.jpg',...
    '..\cam2\a05.jpg',...
    '..\cam2\a06.jpg',...
    '..\cam2\a07.jpg',...
    '..\cam2\a08.jpg',...
    '..\cam2\a09.jpg',...
    '..\cam2\a10.jpg',...
    '..\cam2\a11.jpg',...
    '..\cam2\a12.jpg',...
    '..\cam2\a13.jpg',...
    '..\cam2\a14.jpg',...
    };

% Detect checkerboards in images
[imagePoints, boardSize, imagesUsed] = detectCheckerboardPoints(imageFileNames1, imageFileNames2);

% Generate world coordinates of the checkerboard keypoints
squareSize = 20;  % in units of 'millimeters'
worldPoints = generateCheckerboardPoints(boardSize, squareSize);

% Read one of the images from the first stereo pair
I1 = imread(imageFileNames1{1});
[mrows, ncols, ~] = size(I1);

% Calibrate the camera
[stereoParams, pairsUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', false, 'EstimateTangentialDistortion', true, ...
    'NumRadialDistortionCoefficients', 3, 'WorldUnits', 'millimeters', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', [], ...
    'ImageSize', [mrows, ncols]);

% View reprojection errors
h1=figure; showReprojectionErrors(stereoParams);

% Visualize pattern locations
h2=figure; showExtrinsics(stereoParams, 'cameraCentric');

% Display parameter estimation errors
displayErrors(estimationErrors, stereoParams);

% You can use the calibration data to rectify stereo images.
I2 = imread(imageFileNames2{1});
[J1, J2] = rectifyStereoImages(I1, I2, stereoParams);

% See additional examples of how to use the calibration data.  At the prompt type:
% showdemo('StereoCalibrationAndSceneReconstructionExample')
% showdemo('DepthEstimationFromStereoVideoExample')
